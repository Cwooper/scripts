#!/bin/bash

# Script: convert-docx-to-pdf
# Description: Converts DOCX files to PDF format in a specified directory
# Author: Konnor Kooi
# Date: 2024-11-11

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Function to print status messages
print_status() {
    echo -e "${CYAN}=>${NC} $1"
}

# Function to print success messages
print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

# Function to print error messages
print_error() {
    echo -e "${RED}✗${NC} $1" >&2
}

# Function to show help message
show_help() {
    echo -e "
    ${GREEN}DOCX to PDF Converter${NC}
    A tool to convert DOCX files to PDF format

    ${BOLD}USAGE${NC}
      $(basename "$0") [options]

    ${BOLD}OPTIONS${NC}
      ${CYAN}-p${NC}, ${CYAN}--path${NC}     PATH      Directory containing DOCX files
      ${CYAN}-r${NC}, ${CYAN}--recursive${NC}          Process subdirectories recursively
      ${CYAN}-d${NC}, ${CYAN}--debug${NC}              Enable debug output
      ${CYAN}-h${NC}, ${CYAN}--help${NC}               Show this help message

    ${BOLD}NOTES${NC}
      • Files are converted in place (PDFs created in same directory)
      • Requires LibreOffice to be installed
      • Use --recursive to process all DOCX files in subdirectories
      • Use --debug to see detailed conversion information"
}

# Default values
START_PATH="$(pwd)"  # Use current directory by default
RECURSIVE=false
DEBUG=false

# Check if libreoffice is installed
if ! command -v libreoffice &> /dev/null; then
    print_error "LibreOffice is not installed. Please install it first:"
    echo -e "${BLUE}For Debian/Ubuntu:${NC}"
    echo "    sudo apt-get install libreoffice"
    exit 1
fi

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -p|--path)
            if [ -d "$2" ]; then
                START_PATH="$(cd "$2" && pwd)"
            else
                print_error "Directory does not exist: $2"
                exit 1
            fi
            shift 2
            ;;
        -r|--recursive)
            RECURSIVE=true
            shift
            ;;
        -d|--debug)
            DEBUG=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            show_help
            exit 1
            ;;
    esac
done

# Function to convert files in a directory
convert_directory() {
    local dir="$1"
    local converted=0
    local failed=0

    [ "$DEBUG" = true ] && print_status "Processing directory: $dir"

    # Find all DOCX files in the current directory
    while IFS= read -r -d '' file; do
        [ "$DEBUG" = true ] && print_status "Converting: $file"
        
        if libreoffice --headless --convert-to pdf "$file" --outdir "$(dirname "$file")" 2>/dev/null; then
            ((converted++))
            print_success "Converted: $(basename "$file")"
        else
            ((failed++))
            print_error "Failed to convert: $(basename "$file")"
        fi
    done < <(find "$dir" -maxdepth 1 -type f -name "*.docx" -print0)

    # Process subdirectories if recursive flag is set
    if [ "$RECURSIVE" = true ]; then
        while IFS= read -r -d '' subdir; do
            local sub_results=($(convert_directory "$subdir"))
            converted=$((converted + sub_results[0]))
            failed=$((failed + sub_results[1]))
        done < <(find "$dir" -mindepth 1 -maxdepth 1 -type d -print0)
    fi

    echo "$converted $failed"
}

# Main execution
print_status "Starting conversion in: $START_PATH"

# Get conversion results
results=($(convert_directory "$START_PATH"))
converted=${results[0]}
failed=${results[1]}

# Print summary
echo
print_status "Conversion completed!"
print_success "Successfully converted: $converted files"
if [ $failed -gt 0 ]; then
    print_error "Failed to convert: $failed files"
fi
